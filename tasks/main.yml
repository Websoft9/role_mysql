- name: Install PyMySQL
  pip:
    name: PyMySQL

- import_tasks: RedHat.yml
  when: ansible_os_family == 'RedHat'

- import_tasks: Debian.yml
  when: ansible_os_family == 'Debian'


- name: Create MySQL extra databases 
  mysql_db:
    login_user: root
    login_password: '{{mysql_root_password}}'
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default('utf8mb4',true) }}"
    state: "{{ item.state | default('present',true) }}"
  with_items: "{{ mysql_databases }}"
  when: (mysql_databases is defined) and (mysql_databases != none)


- name: Create extra Databases User
  mysql_user:
    login_user: root
    login_password: '{{mysql_root_password}}'
    name: "{{ item.name }}"
    host: "{{ item.host | default('localhost',true) }}"
    password: "{{ item.password | default('123456',true) }}"
    priv: "{{ item.priv | default('*.*:USAGE',true) }}"
  with_items: "{{ mysql_users }}"
  when: (mysql_users is defined) and (mysql_users != none)
  
- name: Change MySQL configuration extras
  lineinfile:
      dest: /etc/postgresql/{{postgresql_version}}/main/postgresql.conf
      regexp: "data_directory = '/var/lib/postgresql/{{postgresql_version}}/main'"
      line: "data_directory = '/data/pgsql'"
      
- name: Change MySQL configuration extras
  lineinfile:
    dest: /etc/my.cnf
    name: "{{ item.name }}"
    regexp: "{{ item.name }} = '*'"
    line: "{{ item.name }} = '{{item.value}}'"
  with_items: "{{ mysql_configuration_extras }}"
  when: (mysql_configuration_extras is defined) and (mysql_configuration_extras != none)

# display version and service state of components
- name: Get MySQL version
  shell: sudo sh -c "mysql -V 1>> /data/logs/install_version.txt"

- name: Check MySQL Service
  shell: systemctl status mysql | grep Active*
  register: check_mysql_service
  notify: check_mysql_service

#Enable remote connection
- import_tasks: remote.yml
  when: mysql_remote

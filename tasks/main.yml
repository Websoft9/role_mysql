#1 prepare for installation
- name: Install PyMySQL for Ansible MySQL Module
  pip:
    name: PyMySQL

#2 install by OS family    
- include: "{{ansible_os_family}}.yml"

#3 configure
- name: Create MySQL extra databases 
  mysql_db:
    login_user: root
    login_password: '{{mysql_root_password}}'
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default('utf8mb4',true) }}"
    collation: "{{ item.collation | default('utf8mb4_general_ci',true) }}"
    state: "{{ item.state | default('present',true) }}"
  with_items: "{{ mysql_databases }}"
  when: (mysql_databases is defined) and (mysql_databases != none)

- name: Create extra Databases User
  mysql_user:
    login_user: root
    login_password: '{{mysql_root_password}}'
    name: "{{ item.name }}"
    host: "{{ item.host | default('%',true) }}"
    password: "{{ item.password | default('123456',true) }}"
    priv: "{{ item.priv | default('*.*:USAGE',true) }}"
    sql_log_bin: "{{ item.sql_log_bin | default('yes',true) }}"
  with_items: "{{ mysql_users }}"
  when: (mysql_users is defined) and (mysql_users != none)

- name: Change MySQL configuration default
  lineinfile:
    dest: /etc/my.cnf
    regexp: '^{{ item.name }} = *'
    insertafter: '\[mysqld\]'
    firstmatch: yes
    line: "{{ item.name }} = {{item.value}}"
  with_items: "{{ mysql_configuration_default }}"
  when: (mysql_configuration_default is defined) and (mysql_configuration_default != none)

- name: Change MySQL configuration extras
  lineinfile:
    dest: /etc/my.cnf
    regexp: '^{{ item.name }} = *'
    insertafter: '\[mysqld\]'
    firstmatch: yes
    line: "{{ item.name }} = {{item.value}}"
  with_items: "{{ mysql_configuration_extras }}"
  when: (mysql_configuration_extras is defined) and (mysql_configuration_extras != none)
  
- name: Restart MySQL
  shell: systemctl restart mysql

# display version and service state of components
- name: Get MySQL version
  shell: sudo sh -c "mysql -V 1>> /data/logs/install_version.txt"

- name: Check MySQL Service
  shell: systemctl status mysql | grep Active*
  register: check_mysql_service
  notify: check_mysql_service

#Enable remote connection
- import_tasks: remote.yml
  when: mysql_remote

- set_fact:
    mysql_socket: /run/mysqld/mysqld.sock
    mysql_source_url: '{{mysql_generic_url[mysql_version]}}'

- name: Delete MySQL mysql.list for retry
  shell: rm -rf /etc/apt/sources.list.d/mysql.list

- name: import MySQL repo
  template:
    src: mysql.list.jinja2
    dest: /etc/apt/sources.list.d/mysql.list
    
- name: import MySQL apt key from keys.gnupg.net (do not use pgp.mit.edu which may timeout)
  apt_key:
    keyserver: keys.gnupg.net
    id: 5072E1F5

- block:
  - name: Install MySQL {{mysql_version}}
    apt:  
      name: ["mysql-server-{{mysql_version}}"]
      update_cache: yes
    failed_when: false

  - name: Determine if MySQL {{mysql_version}} was successfully installed
    shell: |
      command -v mysql && mysql_exists=$(mysql -V |grep -c {{mysql_version}})
      echo $mysql_exists
    register: mysql_exists

  - debug: var=mysql_exists.stdout

  - block:
    - name: Add user mysql
      user: 
        name: mysql
        shell: /bin/false
        home: /var/lib/mysql
    
    - name: Install Depend on the package
      apt: [libaio1,libncurses5,libstdc++6]

    - name: Download and extract the mysql package
      unarchive:
        src: '{{mysql_source_url}}'
        dest: /user/local/mysql
        remote_src: yes
    
    - name: Update mysql dir permissive
      file: 
        path: /usr/local/mysql
        owner: mysql
        group: mysql
        recurse: yes

    - name: Copy mysql configure file
      copy:
        src: '/usr/local/mysql/support-files/{{item.src}}'
        dest: '{{item.dest}}'
        remote_src: yes
      with_items:
        - {src: my-default.cnf,dest: /etc/my.cnf}
        - {src: mysql.server,dest: /etc/init.d/mysql.server}

    - name: Create soft link for mysql
      file:
        src: '/usr/local/mysql/bin/{{item}}'
        dest: '/usr/bin/{{item}}'
        state: link
      with_fileglob:
        - /usr/local/mysql/bin/*

    - name: Run the Script installation MYSQL {{mysql_version}}
      shell: | 
        scripts/mysql_install_db --user=mysql
      args:
        chdir: /usr/local/mysql

    when: mysql_exists is defined and mysql_exists.stdout == ""

  - name: Change MySQL Directory
    shell: |
      systemctl stop mysql
      rm -rf /data/mysql
      ln -sf /var/lib/mysql /data/
      systemctl start mysql

  - name: Change MySQL root user password 
    mysql_user: 
      name: root 
      password: "{{mysql_root_password}}"
      login_unix_socket: "{{mysql_socket}}"

  - name: Removes all anyelse user accounts
    mysql_user:
      login_user: root
      login_password: "{{mysql_root_password}}"
      name: ''
      host_all: yes
      login_unix_socket: "{{mysql_socket}}"
      state: absent

  - name: Remove hostname user accounts
    mysql_user: 
      login_user: root 
      login_password: "{{mysql_root_password}}" 
      login_unix_socket: "{{mysql_socket}}"
      name: root
      host: "{{ ansible_nodename }}" 
      state: absent

  - name: Removes test Databases
    mysql_db:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_unix_socket: "{{mysql_socket}}"
      name: test
      state: absent

  - name: Removing privileges on test database
    command: mysql -uroot -p{{mysql_root_password}} -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'"

  - name: del mysql Automatically generated for Debian scripts.
    file:
      path: /etc/mysql/debian.cnf
      state: absent

  - name: Create a MySQL  symbolic link
    file:
      src: '{{item.src}}'
      dest: '{{item.dest}}'
      state: link
    with_items:
      - {src: '/etc/mysql/mysql.conf.d/mysqld.cnf',dest: /data/config/mysqld.cnf}  
      - {src: '/var/log/mysql',dest: '/data/logs/mysqld'}
      - {src: '/etc/mysql/mysql.conf.d/mysqld.cnf',dest: '/etc/my.cnf'}
  when: mysql_install_server == "package" 

- name: Install MySQL Client
  apt:  
    name: [mysql-client]
    update_cache: yes
  when: not mysql_install_server
